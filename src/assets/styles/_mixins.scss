@mixin flex-box($align-items, $justify-content) {
  align-items: $align-items;
  display: flex;
  justify-content: $justify-content;
}

/// Mixin to manage responsive breakpoints
/// @author Kitty Giraudel
/// @param {String} $breakpoint - Breakpoint name
/// @require $breakpoints
@mixin media-breakpoint($breakpoint) {
  // If the key exists in the map
  @if map-has-key($breakpoints, $breakpoint) {
    // Prints a media query based on the value
    @media (min-width: map-get($breakpoints, $breakpoint)) {
      @content;
    }
  }

  // If the key doesn't exist in the map
  @else {
    @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
        + "Available breakpoints are: #{map-keys($breakpoints)}.";
  }
}

@mixin transition() {
  transition: 0.3s ease;
}

@mixin light-theme() {
  --primary-background: #{$gray};
  --border-toggle-btn: #{$tertiary};
  --toggle-btn: #{$tertiary};
  --primary-border: #{$tertiary-lightest};
  --header-border-avatar: #{$tertiary-dimmer};
  --body-container: #{$gray-light};
  --text-color: #{$tertiary};
  --border-primary-btn-hover: #{$tertiary-dimmer};
}

@mixin dark-theme() {
  --primary-background: #{$dark-dimmer};
  --border-toggle-btn: #{$tertiary-light};
  --toggle-btn: #{$tertiary-lightest};
  --primary-border: #{$dark-dimmer};
  --header-border-avatar: #{$dark-dimmer};
  --body-container: #{$dark};
  --text-color: #{$tertiary-lighter};
  --border-primary-btn-hover: #{$tertiary-lightest};
}
